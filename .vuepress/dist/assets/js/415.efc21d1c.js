(window.webpackJsonp=window.webpackJsonp||[]).push([[415],{832:function(t,n,e){"use strict";e.r(n);var s=e(62),a=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",{attrs:{id:"数组中的数对"}}),t._v(" "),e("h3",{attrs:{id:"_532-数组中的k-diff数对-绝对的好题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_532-数组中的k-diff数对-绝对的好题"}},[t._v("#")]),t._v(" 532. 数组中的K-diff数对 绝对的好题")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/k-diff-pairs-in-an-array/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣原题链接（点我直达）"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("给定一个整数数组和一个整数 k, 你需要在数组里找到不同的 k-diff 数对。这里将 k-diff 数对定义为一个整数对 (i, j), 其中 i 和 j 都是数组中的数字，且两数之差的绝对值是 k.")]),t._v(" "),e("p",[t._v("示例 1:")]),t._v(" "),e("p",[t._v("输入: [3, 1, 4, 1, 5], k = 2\n输出: 2\n解释: 数组中有两个 2-diff 数对, (1, 3) 和 (3, 5)。\n尽管数组中有两个1，但我们只应返回不同的数对的数量。\n示例 2:")]),t._v(" "),e("p",[t._v("输入:[1, 2, 3, 4, 5], k = 1\n输出: 4\n解释: 数组中有四个 1-diff 数对, (1, 2), (2, 3), (3, 4) 和 (4, 5)。\n示例 3:")]),t._v(" "),e("p",[t._v("输入: [1, 3, 1, 5, 4], k = 0\n输出: 1\n解释: 数组中只有一个 0-diff 数对，(1, 1)。\n注意:")]),t._v(" "),e("p",[t._v("数对 (i, j) 和数对 (j, i) 被算作同一数对。\n数组的长度不超过10,000。\n所有输入的整数的范围在 [-1e7, 1e7]。")]),t._v(" "),e("h4",{attrs:{id:"第一版-好题-我做的太差了"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一版-好题-我做的太差了"}},[t._v("#")]),t._v(" 第一版，好题，我做的太差了")]),t._v(" "),e("p",[t._v("执行用时 :740 ms, 在所有 cpp 提交中击败了7.47%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :11.8 MB, 在所有 cpp 提交中击败了46.66%的用户")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("int findPairs(vector<int>& nums, int k) {\n\tif (k < 0) return 0;\n\tsort(nums.begin(), nums.end());\n\tunordered_map<int,int> result;\n\t//int cut = 0;\n\tfor (unsigned i = 0; i < nums.size(); ++i) {\n\t\t//result.clear();\n\t\tunsigned j;\n\t\tif (k == 0) j = i + 1;\n\t\telse\n\t\t\tj = i;\n\t\tfor (; j < nums.size(); ++j) {\n\t\t\tif (nums[j] - nums[i] == k)\n\t\t\t\tresult.insert({nums[i],nums[j] });\n\t\t\t\t//if (result.count({nums[i]})\n\n\t\t}\n\t\t//count += result.size();\n\t}\n\treturn result.size();\n}\n\n")])])]),e("h4",{attrs:{id:"第二版-看的别人的-二分查找快一点-学到了"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二版-看的别人的-二分查找快一点-学到了"}},[t._v("#")]),t._v(" 第二版，看的别人的，二分查找快一点，学到了")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    int findPairs(vector<int>& nums, int k) \n    {\n        sort(nums.begin(),nums.end());\n        int n=nums.size();\n        int ans=0;\n        for(int i=0;i<n;++i)\n        {\n            if(i!=0&&nums[i]==nums[i-1])\n                continue;\n            auto it=lower_bound(nums.begin()+i+1,nums.end(),k+nums[i]);\n            if(it==nums.end())//查找失败,说明此刻数组中最大值比nums[i]+k小，因此无需再进行查找,这一步很关键\n                break;\n            if(*it==k+nums[i])\n                ++ans;\n        }\n        return ans;\n    }\n\n\n")])])]),e("p",{attrs:{id:"长按键入"}}),t._v(" "),e("h3",{attrs:{id:"_925-长按键入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_925-长按键入"}},[t._v("#")]),t._v(" 925. 长按键入")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/long-pressed-name/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣原题链接（点我直达）"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("你的朋友正在使用键盘输入他的名字 "),e("code",[t._v("name")]),t._v("。偶尔，在键入字符 "),e("code",[t._v("c")]),t._v(" 时，按键可能会被"),e("em",[t._v("长按")]),t._v("，而字符可能被输入 1 次或多次。")]),t._v(" "),e("p",[t._v("你将会检查键盘输入的字符 "),e("code",[t._v("typed")]),t._v("。如果它对应的可能是你的朋友的名字（其中一些字符可能被长按），那么就返回 "),e("code",[t._v("True")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("示例 1：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("输入：name = \"alex\", typed = \"aaleex\"\n输出：true\n解释：'alex' 中的 'a' 和 'e' 被长按。\n")])])]),e("p",[e("strong",[t._v("示例 2：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入：name = "saeed", typed = "ssaaedd"\n输出：false\n解释：\'e\' 一定需要被键入两次，但在 typed 的输出中不是这样。\n')])])]),e("p",[e("strong",[t._v("示例 3：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入：name = "leelee", typed = "lleeelee"\n输出：true\n')])])]),e("p",[e("strong",[t._v("示例 4：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入：name = "laiden", typed = "laiden"\n输出：true\n解释：长按名字中的字符并不是必要的。\n')])])]),e("h4",{attrs:{id:"第一版-这也太容易了吧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一版-这也太容易了吧"}},[t._v("#")]),t._v(" 第一版，这也太容易了吧...")]),t._v(" "),e("p",[t._v("执行用时 :0 ms, 在所有 cpp 提交中击败了100.00%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :8.2 MB, 在所有 cpp 提交中击败了99.22%的用户")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    bool isLongPressedName(string name, string typed) {\n    if (typed.size() < name.size()) return false;\n\n\tint lenName = name.size(), lenTyped = typed.size();\n\tunsigned i = 0,j = 0;\n\twhile(i<lenName&&j<lenTyped)\n\t{\n\t\tif (name[i] == typed[j]) {\n\t\t\t++i;\n\t\t\t++j;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t++j;\n\t\t}\n\t}\n\n\n\tif (i == lenName && j <= lenTyped)\n\t\treturn true;\n\telse\n\t\treturn false;\n        \n    }\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);