(window.webpackJsonp=window.webpackJsonp||[]).push([[371],{787:function(t,n,e){"use strict";e.r(n);var a=e(62),s=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",{attrs:{id:"罗马数字转整数"}}),t._v(" "),e("h3",{attrs:{id:"_13-罗马数字转整数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-罗马数字转整数"}},[t._v("#")]),t._v(" 13. 罗马数字转整数")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/roman-to-integer/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣原题链接（点我直达）"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("罗马数字包含以下七种字符: "),e("code",[t._v("I")]),t._v("， "),e("code",[t._v("V")]),t._v("， "),e("code",[t._v("X")]),t._v("， "),e("code",[t._v("L")]),t._v("，"),e("code",[t._v("C")]),t._v("，"),e("code",[t._v("D")]),t._v(" 和 "),e("code",[t._v("M")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("字符          数值\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\n")])])]),e("p",[t._v("例如， 罗马数字 2 写做 "),e("code",[t._v("II")]),t._v(" ，即为两个并列的 1。12 写做 "),e("code",[t._v("XII")]),t._v(" ，即为 "),e("code",[t._v("X")]),t._v(" + "),e("code",[t._v("II")]),t._v(" 。 27 写做  "),e("code",[t._v("XXVII")]),t._v(", 即为 "),e("code",[t._v("XX")]),t._v(" + "),e("code",[t._v("V")]),t._v(" + "),e("code",[t._v("II")]),t._v(" 。")]),t._v(" "),e("p",[t._v("通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 "),e("code",[t._v("IIII")]),t._v("，而是 "),e("code",[t._v("IV")]),t._v("。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 "),e("code",[t._v("IX")]),t._v("。这个特殊的规则只适用于以下六种情况：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("I")]),t._v(" 可以放在 "),e("code",[t._v("V")]),t._v(" (5) 和 "),e("code",[t._v("X")]),t._v(" (10) 的左边，来表示 4 和 9。")]),t._v(" "),e("li",[e("code",[t._v("X")]),t._v(" 可以放在 "),e("code",[t._v("L")]),t._v(" (50) 和 "),e("code",[t._v("C")]),t._v(" (100) 的左边，来表示 40 和 90。")]),t._v(" "),e("li",[e("code",[t._v("C")]),t._v(" 可以放在 "),e("code",[t._v("D")]),t._v(" (500) 和 "),e("code",[t._v("M")]),t._v(" (1000) 的左边，来表示 400 和 900。")])]),t._v(" "),e("p",[t._v("给定一个罗马数字，将其转换成整数。输入确保在 1 到 3999 的范围内。")]),t._v(" "),e("p",[e("strong",[t._v("示例 1:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入: "III"\n输出: 3\n')])])]),e("p",[e("strong",[t._v("示例 2:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入: "IV"\n输出: 4\n')])])]),e("p",[e("strong",[t._v("示例 3:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入: "IX"\n输出: 9\n')])])]),e("p",[e("strong",[t._v("示例 4:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入: "LVIII"\n输出: 58\n解释: L = 50, V= 5, III = 3.\n')])])]),e("p",[e("strong",[t._v("示例 5:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入: "MCMXCIV"\n输出: 1994\n解释: M = 1000, CM = 900, XC = 90, IV = 4.\n')])])]),e("h4",{attrs:{id:"第一版-比较简单-注意边界条件即可"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一版-比较简单-注意边界条件即可"}},[t._v("#")]),t._v(" 第一版，比较简单，注意边界条件即可")]),t._v(" "),e("p",[t._v("执行用时 :28 ms, 在所有 cpp 提交中击败了45.95%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :10.3 MB, 在所有 cpp 提交中击败了83.63%的用户")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("int romanToInt(string s) {\n\tunordered_map<char, int> nums = { {'I',1},{'V',5},{'X',10},{'L',50},{'C',100},{'D',500},{'M',1000} };\n\tint sum = 0, len = s.size();\n\tfor (int i = 0; i < len; ++i) {\n\t\tif (s[i] == 'I') {\n\n\t\t\tif (i<len-1&&s[i+1] == 'V') { sum += 4; i++; } //千万注意i要小于len-1才可以，注意不要越界\n\t\t\telse if (i < len - 1 && s[i+1] == 'X') {\n\t\t\t\tsum += 9;\n\t\t\t\ti++;\n\t\t}\n\t\t\telse\n\t\t\t\tsum += 1;\n\t\t} else  if (s[i] == 'X') {\n\n\t\t\tif (i < len - 1 && s[i+1] == 'L') { sum += 40; i++; }\n\t\t\telse if (i < len - 1 && s[i+1] == 'C') {\n\t\t\t\tsum += 90;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t\tsum += 10;\n\t\t}else if (s[i] == 'C') {\n\n\t\t\tif (i < len - 1 && s[i+1] == 'D') { sum += 400; i++; }\n\t\t\telse if (i < len - 1 && s[i+1] == 'M') {\n\t\t\t\tsum += 900;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t\tsum += 100;\n\t\t}\n\t\telse  if (s[i] == 'V') sum += 5;\n\t\telse  if (s[i] == 'L') sum += 50;\n\t\telse  if (s[i] == 'D') sum += 500;\n\t\telse  if (s[i] == 'M') sum += 1000;\n\n\n\t}\n\n\treturn sum;\n}\n")])])]),e("p",{attrs:{id:"二进制求和"}}),t._v(" "),e("h3",{attrs:{id:"_67-二进制求和"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_67-二进制求和"}},[t._v("#")]),t._v(" 67. 二进制求和")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/add-binary/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣原题链接（点我直达）"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("给定两个二进制字符串，返回他们的和（用二进制表示）。")]),t._v(" "),e("p",[t._v("输入为"),e("strong",[t._v("非空")]),t._v("字符串且只包含数字 "),e("code",[t._v("1")]),t._v(" 和 "),e("code",[t._v("0")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("示例 1:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入: a = "11", b = "1"\n输出: "100"\n')])])]),e("p",[e("strong",[t._v("示例 2:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入: a = "1010", b = "1011"\n输出: "10101"\n')])])]),e("h4",{attrs:{id:"第一版-其实不难-仔细一点就可以了"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一版-其实不难-仔细一点就可以了"}},[t._v("#")]),t._v(" 第一版，其实不难，仔细一点就可以了")]),t._v(" "),e("p",[t._v("执行用时 :8 ms, 在所有 cpp 提交中击败了48.84%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :8.7 MB, 在所有 cpp 提交中击败了45.19%的用户")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    string addBinary(string a, string b) {\n\treverse(a.begin(), a.end());\n\treverse(b.begin(), b.end());\n\tif (a.size() < b.size()) swap(a, b);\n\n\tvector<char> res;\n\tint len = b.size(),minus = a.size()-b.size();\n\tfor (int i = 0; i <len; ++i) {\n\t\tres.push_back(b[i] - '0' + a[i]);\n\t}\n\t//cout << res << endl;\n\tfor (int i = len; i < len+minus; ++i)\n\t\tres.push_back(a[i]);\n\t/*reverse(res.begin(), res.end());\n\tcout << res << endl;*/\n\t//for (auto a : res)\n\t//\tcout << a;\n\t//cout << endl;\n\tfor (int i = 0; i <len+minus-1; ++i) {\n\t\tif (res[i] >= '2') {\n\t\t\tres[i + 1] = res[i + 1] + (res[i] - '0')/2;\n\t\t\tres[i] = '0' + (res[i] -'0') % 2;\n\t\t}\n\n\t\t//for (auto a : res)\n\t\t//\tcout << a;\n\t\t//cout << endl;\n\t}\n\t//cout << res << endl;\n\tstring result;\n\tfor (auto& a : res)\n\t\tresult += a;\n\n\t//cout << result << endl;\n\n\treverse(result.begin(), result.end());\n\tif (result[0] > '1') {\n\t\tresult[0] = result[0] -2;\n\t\tresult = '1' + result;\n\t}\n\n\t//cout << res << endl;\n\t//while (res[0] > '1') {\n\t//\tres[0] = res[0] - 2;\n\t//\tres = '1' + res;\n\t//}\n\t//reverse(res.begin(), res.end());\n\treturn result;\n        \n    }\n")])])]),e("p",{attrs:{id:"字符串中的单词数"}}),t._v(" "),e("h3",{attrs:{id:"_434-字符串中的单词数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_434-字符串中的单词数"}},[t._v("#")]),t._v(" 434. 字符串中的单词数")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/number-of-segments-in-a-string/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣原题链接（点我直达）"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("统计字符串中的单词个数，这里的单词指的是连续的不是空格的字符。")]),t._v(" "),e("p",[t._v("请注意，你可以假定字符串里不包括任何不可打印的字符。")]),t._v(" "),e("p",[e("strong",[t._v("示例:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入: "Hello, my name is John"\n输出: 5\n')])])]),e("h4",{attrs:{id:"第一版-这里对单词的定义很不一样。。。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一版-这里对单词的定义很不一样。。。"}},[t._v("#")]),t._v(" 第一版，这里对单词的定义很不一样。。。")]),t._v(" "),e("p",[t._v("执行用时 :4 ms, 在所有 cpp 提交中击败了65.68%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :8.5 MB, 在所有 cpp 提交中击败了23.30%的用户")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('int countSegments(string s) {\n\tint cut = 0;\n\tstring word;\n\tfor (auto& a : s) {\n\t\tif (a == \' \' && word != "") {\n\t\t\tcut++;\n\t\t\t//cout << word << endl;\n\t\t\tword = "";\n\t\t}\n\t\telse if (a == \' \' && word == "") continue;\n\t\telse\n\t\t{\t\t\t\n\t\t\tword += a;\n\t\t}\n\n\t}\n\tif (word != "") cut++;\n\treturn cut;\n}\n')])])]),e("h4",{attrs:{id:"第二版-利用stringstream来实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二版-利用stringstream来实现"}},[t._v("#")]),t._v(" 第二版，利用stringstream来实现")]),t._v(" "),e("p",[t._v("执行用时 :4 ms, 在所有 cpp 提交中击败了65.68%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :8.5 MB, 在所有 cpp 提交中击败了33.50%的用户")]),t._v(" "),e("p",[e("strong",[t._v("是以空格作为分隔符的，很巧妙的流的概念：stringsstream")])]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    int countSegments(string s) {\n        string str;\n        int count = 0;\n        stringstream ss;\n        ss << s;\n        while (ss >> str) \n            count ++;\n        return count;\n        \n    }\n")])])]),e("p",{attrs:{id:"最常见的单词"}}),t._v(" "),e("h3",{attrs:{id:"_819-最常见的单词"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_819-最常见的单词"}},[t._v("#")]),t._v(" 819. 最常见的单词")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/most-common-word/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣原题链接（点我直达）"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("给定一个段落 (paragraph) 和一个禁用单词列表 (banned)。返回出现次数最多，同时不在禁用列表中的单词。题目保证至少有一个词不在禁用列表中，而且答案唯一。")]),t._v(" "),e("p",[t._v("禁用列表中的单词用小写字母表示，不含标点符号。段落中的单词不区分大小写。答案都是小写字母。")]),t._v(" "),e("p",[e("strong",[t._v("示例：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入: \nparagraph = "Bob hit a ball, the hit BALL flew far after it was hit."\nbanned = ["hit"]\n输出: "ball"\n解释: \n"hit" 出现了3次，但它是一个禁用的单词。\n"ball" 出现了2次 (同时没有其他单词出现2次)，所以它是段落里出现次数最多的，且不在禁用列表中的单词。 \n注意，所有这些单词在段落里不区分大小写，标点符号需要忽略（即使是紧挨着单词也忽略， 比如 "ball,"）， \n"hit"不是最终的答案，虽然它出现次数更多，但它在禁用单词列表中。\n')])])]),e("p",[e("strong",[t._v("说明：")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("1 <= 段落长度 <= 1000")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("1 <= 禁用单词个数 <= 100")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("1 <= 禁用单词长度 <= 10")]),t._v(".")]),t._v(" "),e("li",[t._v("答案是唯一的, 且都是小写字母 (即使在 "),e("code",[t._v("paragraph")]),t._v(" 里是大写的，即使是一些特定的名词，答案都是小写的。)")]),t._v(" "),e("li",[e("code",[t._v("paragraph")]),t._v(" 只包含字母、空格和下列标点符号"),e("code",[t._v("!?',;.")])]),t._v(" "),e("li",[t._v("不存在没有连字符或者带有连字符的单词。")]),t._v(" "),e("li",[t._v("单词里只包含字母，不会出现省略号或者其他标点符号。")])]),t._v(" "),e("h4",{attrs:{id:"第一版-有的没考虑到"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一版-有的没考虑到"}},[t._v("#")]),t._v(" 第一版，有的没考虑到")]),t._v(" "),e("p",[t._v("输入："),e("strong",[t._v('"a, a, a, a, b,b,b,c, c" ["a"]')])]),t._v(" "),e("p",[t._v("输出："),e("strong",[t._v('"bbbc"')])]),t._v(" "),e("p",[t._v("预期："),e("strong",[t._v('"b"')])]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" string mostCommonWord(string paragraph, vector<string>& banned) {\n\tstring word;\n\tint len=paragraph.size(),max=1;\n\tunordered_map<string, int> res;\n\tfor (int i = 0; i < len; ++i) {\n\t\tif (paragraph[i] >= 'A' && paragraph[i] <= 'Z') word += paragraph[i] + 'a' - 'A';\n\t\telse if (paragraph[i] >= 'a' && paragraph[i] <= 'z') word += paragraph[i];\n\t\telse if (paragraph[i] == ' ') {//空格\n\t\t\tif (find(banned.begin(), banned.end(), word) == banned.end()) {\n\t\t\t\tres[word] += 1;\n\t\t\t}\n\t\t\tword = \"\";\n\t\t}\n\t}\n\n\n\tfor (auto &a : res) {\n\t\tif (max <= a.second) { \n\t\t\tmax = a.second;\n\t\t\tword = a.first; \n\t\t}\n\t}\n\n\treturn word;\n    }\n")])])]),e("h4",{attrs:{id:"第二版-其实不难-也可以再优化一点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二版-其实不难-也可以再优化一点"}},[t._v("#")]),t._v(" 第二版，其实不难,也可以再优化一点")]),t._v(" "),e("p",[t._v("执行用时 :8 ms, 在所有 cpp 提交中击败了78.04%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :8.6 MB, 在所有 cpp 提交中击败了97.33%的用户")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    string mostCommonWord(string paragraph, vector<string>& banned) {\n\tstring word;\n\tint len=paragraph.size(),max=1;\n\tunordered_map<string, int> res;\n\tfor (auto &p:paragraph) {\n\n\t\tif (p >= 'A' && p <= 'Z') word += p + 'a' - 'A';\n\t\telse if (p >= 'a' && p <= 'z') word += p;\n\t\telse if(word!=\"\") // && paragraph[i]==' '|| paragraph[i] == '!' || paragraph[i] == '?' || paragraph[i] ==  '\\''|| paragraph[i] == ',' || paragraph[i] == ':' || paragraph[i] == '.'\n\t\t{\n\t\t\tif (find(banned.begin(), banned.end(), word) == banned.end()) {\n\t\t\t\tres[word] += 1;\n\t\t\t}\n\t\t\tword = \"\";\n\t\t}\n\t\n\n\t}\n\n\n\tfor (auto &a : res) {\n\t\t//cout << a.first << \" \" << a.second << endl;\n\t\tif (max <= a.second) { \n\t\t\tmax = a.second;\n\t\t\tword = a.first; \n\t\t}\n\t}\n\n\treturn word;\n    }\n")])])]),e("h4",{attrs:{id:"第三版-这个反而更快-有点不可思议。。。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三版-这个反而更快-有点不可思议。。。"}},[t._v("#")]),t._v(" 第三版，这个反而更快，有点不可思议。。。")]),t._v(" "),e("p",[t._v("执行用时 :4 ms, 在所有 cpp 提交中击败了98.99%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :8.6 MB, 在所有 cpp 提交中击败了100.00%的用户")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    string mostCommonWord(string paragraph, vector<string>& banned) {\n    string word;\n\tint len=paragraph.size(),max=1;\n\tunordered_map<string, int> res;\n\tfor (auto p:paragraph) {\n\n\t\tif (p >= 'A' && p <= 'Z') word += p + 'a' - 'A';\n\t\telse if (p >= 'a' && p <= 'z') word += p;\n\t\telse if(word!=\"\") \n\t\t{\n\t\t\tif (find(banned.begin(), banned.end(), word) == banned.end()) {\n\t\t\t\tres[word] += 1;\n\t\t\t}\n\t\t\tword = \"\";\n\t\t}\n\t\n\n\t}\n\n\n\tfor (auto a : res) {\n\t\tif (max <= a.second) { \n\t\t\tmax = a.second;\n\t\t\tword = a.first; \n\t\t}\n\t}\n\n\treturn word;\n    }\n")])])]),e("p",{attrs:{id:"亲密字符串"}}),t._v(" "),e("h3",{attrs:{id:"_859-亲密字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_859-亲密字符串"}},[t._v("#")]),t._v(" 859. 亲密字符串")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/buddy-strings/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣原题链接（点我直达）"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("给定两个由小写字母构成的字符串 "),e("code",[t._v("A")]),t._v(" 和 "),e("code",[t._v("B")]),t._v(" ，只要我们可以通过交换 "),e("code",[t._v("A")]),t._v(" 中的两个字母得到与 "),e("code",[t._v("B")]),t._v(" 相等的结果，就返回 "),e("code",[t._v("true")]),t._v(" ；否则返回 "),e("code",[t._v("false")]),t._v(" 。")]),t._v(" "),e("p",[e("strong",[t._v("示例 1：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入： A = "ab", B = "ba"\n输出： true\n')])])]),e("p",[e("strong",[t._v("示例 2：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入： A = "ab", B = "ab"\n输出： false\n')])])]),e("p",[e("strong",[t._v("示例 3:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入： A = "aa", B = "aa"\n输出： true\n')])])]),e("p",[e("strong",[t._v("示例 4：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入： A = "aaaaaaabc", B = "aaaaaaacb"\n输出： true\n')])])]),e("p",[e("strong",[t._v("示例 5：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入： A = "", B = "aa"\n输出： false\n')])])]),e("p",[e("strong",[t._v("提示：")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("0 <= A.length <= 20000")])]),t._v(" "),e("li",[e("code",[t._v("0 <= B.length <= 20000")])]),t._v(" "),e("li",[e("code",[t._v("A")]),t._v(" 和 "),e("code",[t._v("B")]),t._v(" 仅由小写字母构成。")])]),t._v(" "),e("h4",{attrs:{id:"第一版-错误的解法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一版-错误的解法"}},[t._v("#")]),t._v(" 第一版，错误的解法")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" bool buddyStrings(string A, string B) {\n    if (A.size() != B.size()) return false;\n\tint len = A.size(), index = 0;\n\tunordered_set<char> res;\n\tstring strA, strB;\n\tfor (int i = 0; i < len; ++i) {\n\t\tif (A[i] != B[i]) {\n\t\t\tstrA += A[i];\n\t\t\tstrB += B[i];\n\t\t}\n\t\telse\n\t\t\tres.insert(A[i]);\n\t}\n\n\tif (res.size() == 1) return true;\n\tif (strA.size() != 2) return false;\n\treturn strA[0] == strB[1] && strA[1] == strB[0];\n    }\n")])])]),e("h4",{attrs:{id:"第二版-看了提示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二版-看了提示"}},[t._v("#")]),t._v(" 第二版，看了提示")]),t._v(" "),e("p",[t._v("执行用时 :8 ms, 在所有 cpp 提交中击败了68.31%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :9.2 MB, 在所有 cpp 提交中击败了19.33%的用户")]),t._v(" "),e("p",[t._v("就三种情况")]),t._v(" "),e("p",[t._v("1、长度不一样或者长度小于2，直接false")]),t._v(" "),e("p",[t._v("2、不匹配的个数超过2个，false")]),t._v(" "),e("p",[t._v("3、如果全部一样，则看A中是否有重复的字符，有就是true了，")]),t._v(" "),e("p",[t._v("否则就看两个不匹配的位序上的字符交换后是否一样")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    bool buddyStrings(string A, string B) {\n\tif (A.size() != B.size() || A.size()<2) return false;\n\tint len = A.size();\n\tvector<int> res;\n\tres.reserve(len);\n\tfor (int i = 0; i < len; ++i) {\n\t\tif (A[i] != B[i]) {\n\t\t\tres.push_back(i);\n\t\t\tif (res.size() > 2) return false;\n\t\t}\n\t}\n\n\n\tif (res.size() == 0) {\n\t\tunordered_set<char> misMatch(A.begin(), A.end());\n\t\treturn misMatch.size() < len;\n\t}\n\treturn A[res[0]] == B[res[1]] && A[res[1]] == B[res[0]];\n    }\n")])])]),e("p",{attrs:{id:"重复叠加字符串匹配"}}),t._v(" "),e("h3",{attrs:{id:"_686-重复叠加字符串匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_686-重复叠加字符串匹配"}},[t._v("#")]),t._v(" 686. 重复叠加字符串匹配")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/repeated-string-match/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣原题链接（点我直达）"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("给定两个字符串 A 和 B, 寻找重复叠加字符串A的最小次数，使得字符串B成为叠加后的字符串A的子串，如果不存在则返回 -1。")]),t._v(" "),e("p",[t._v('举个例子，A = "abcd"，B = "cdabcdab"。')]),t._v(" "),e("p",[t._v('答案为 3， 因为 A 重复叠加三遍后为 “abcdabcdabcd”，此时 B 是其子串；A 重复叠加两遍后为"abcdabcd"，B 并不是其子串。')]),t._v(" "),e("p",[e("strong",[t._v("注意:")])]),t._v(" "),e("p",[e("code",[t._v("A")]),t._v(" 与 "),e("code",[t._v("B")]),t._v(" 字符串的长度在1和10000区间范围内。")]),t._v(" "),e("h4",{attrs:{id:"第一版-很精妙-很经典-很厉害"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一版-很精妙-很经典-很厉害"}},[t._v("#")]),t._v(" 第一版，很精妙,很经典，很厉害")]),t._v(" "),e("p",[t._v("执行用时 :16 ms, 在所有 cpp 提交中击败了92.28%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :9.2 MB, 在所有 cpp 提交中击败了78.79%的用户")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("if (A.empty()) {\n\t\treturn -1;\n\t}\n\tstring T = A;\n\tint i = 1;\n\twhile (T.size() < B.size()) {\n\t\tT.append(A);\n\t\t++i;\n\t}\n\t//A的长度大于等于B了\n\tif (T.find(B) != string::npos) {//顺序增长的就可以了,比如abcd 和 abcdabcdabcd\n\t\treturn i;\n\t}\n\tT.append(A);\n\t++i;\n\tif (T.find(B) != string::npos) { //不是按序增长，比如abcd 和 cdabcdabcdabcdab\n\t\treturn i;\n\t}\n\treturn -1;\n\n")])])]),e("p",{attrs:{id:"验证回文字符串"}}),t._v(" "),e("h3",{attrs:{id:"_680-验证回文字符串-ii"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_680-验证回文字符串-ii"}},[t._v("#")]),t._v(" 680. 验证回文字符串 Ⅱ")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://leetcode-cn.com/problems/valid-palindrome-ii/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣原题链接（点我直达）"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("给定一个非空字符串 "),e("code",[t._v("s")]),t._v("，"),e("strong",[t._v("最多")]),t._v("删除一个字符。判断是否能成为回文字符串。")]),t._v(" "),e("p",[e("strong",[t._v("示例 1:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入: "aba"\n输出: True\n')])])]),e("p",[e("strong",[t._v("示例 2:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('输入: "abca"\n输出: True\n解释: 你可以删除c字符。\n')])])]),e("p",[e("strong",[t._v("注意:")])]),t._v(" "),e("ol",[e("li",[t._v("字符串只包含从 a-z 的小写字母。字符串的最大长度是50000。")])]),t._v(" "),e("h4",{attrs:{id:"第一版-想差了-不应该用间两端扩展法的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一版-想差了-不应该用间两端扩展法的"}},[t._v("#")]),t._v(" 第一版，想差了，不应该用间两端扩展法的")]),t._v(" "),e("p",[t._v("abc")]),t._v(" "),e("p",[t._v("aba")]),t._v(" "),e("p",[t._v("aeeeee")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("bool equal(string& s, int low, int high) {\n\tint cut = 0;\n\tif (low == high) {\n\t\tlow--;\n\t\thigh++;\n\t\tcut++;\n\t}\n\twhile (low >= 0 && high < s.size()) {\n\t\tif (s[low] == s[high]) {\n\t\t\tlow--;\n\t\t\thigh++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcut++;\n\t\t\tlow--;\n\t\t\thigh++;\n\t\t}\n\t\tif (cut == 2) return false;\n\t}\n\n\treturn low == -1 && high == s.size();\n\n}\n\nbool validPalindrome(string s) {\n\tif (s.size() < 3) return true;\n\n\tint len = s.size();\n\tif (len % 2 == 0) return equal(s, -1 + len / 2, len / 2);\n\telse\n\t\treturn equal(s, len / 2, len / 2);\n\n}\n")])])]),e("h4",{attrs:{id:"第二版-应该从两端向中间进发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二版-应该从两端向中间进发"}},[t._v("#")]),t._v(" 第二版，应该从两端向中间进发")]),t._v(" "),e("p",[e("strong",[t._v("从两端向中间进发，遇到不相等的了就加一或者减一再进行判断")])]),t._v(" "),e("p",[e("strong",[t._v("，千万注意边界的判断情况")])]),t._v(" "),e("p",[t._v("执行用时 :80 ms, 在所有 cpp 提交中击败了74.60%的用户")]),t._v(" "),e("p",[t._v("内存消耗 :21.7 MB, 在所有 cpp 提交中击败了89.60%的用户")]),t._v(" "),e("div",{staticClass:"language-c++ extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("bool equal(string& s, int low, int high) {\n\twhile (low < high && s[low] == s[high]) {\n\t\tlow++;\n\t\thigh--;\n\t}\n\n\treturn low >= high;\n}\n\nbool validPalindrome(string s) {\n\tif (s.size() < 3) return true;\n\n\tint low=0,high = s.size()-1;\n\twhile (s[low] == s[high]&&low < high) {\n\t\tlow++;\n\t\thigh--;\n\t}\n\tif (low == high ||  low-high==1) return true;\n\telse if (equal(s, low+1, high) || equal(s, low, high-1))\n\t\treturn true;\n\telse\n\t\treturn false;\n\t\t\n}\n\n\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);